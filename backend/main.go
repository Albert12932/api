package main

import (
	"bdstudy/backend/config"
	routes2 "bdstudy/backend/routes"
	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	"log"
	"os"
	"os/signal"
	"syscall"
	"time"
)

func main() {

	db, err := config.ConnectDB()
	if err != nil {
		log.Fatalf("error while connecting to db:%v", err)
	}
	defer db.Close()

	r := gin.Default()

	r.Use(cors.New(cors.Config{
		AllowOrigins:     []string{"http://127.0.0.1:5500"}, // –∏–º–µ–Ω–Ω–æ –∫–∞–∫ –≤ —Ç–≤–æ–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
		AllowMethods:     []string{"GET", "POST", "PUT", "DELETE", "OPTIONS"},
		AllowHeaders:     []string{"Origin", "Content-Type", "Accept"},
		ExposeHeaders:    []string{"Content-Length"},
		AllowCredentials: true,
		MaxAge:           12 * time.Hour,
	}))

	routes2.RegisterUserRoutes(r, db)
	routes2.RegisterTaskRoutes(r, db)
	go func() {
		log.Println("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")
		if err := r.Run(":8080"); err != nil {
			log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: %v", err)
		}
	}()

	// –ö–∞–Ω–∞–ª –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∏–≥–Ω–∞–ª–æ–≤ –û–°
	quit := make(chan os.Signal, 1)
	// –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ —Å–∏–≥–Ω–∞–ª—ã
	signal.Notify(quit, syscall.SIGINT, syscall.SIGTERM)

	// –ë–ª–æ–∫–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –≥–æ—Ä—É—Ç–∏–Ω—É, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–º —Å–∏–≥–Ω–∞–ª
	<-quit
	log.Println("Shutting down server...")

}
